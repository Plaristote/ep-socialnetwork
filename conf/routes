# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

POST   /session                controllers.Session.create()
DELETE /session                controllers.Session.destroy()
GET    /session                controllers.Session.get()

POST   /users                  controllers.Users.create()
PUT    /users                  controllers.Users.update()
GET    /users                  controllers.Users.index()
GET    /users/:id              controllers.Users.show(id: String)
DELETE /users                  controllers.Users.destroy()

POST   /pictures               controllers.Pictures.create()
PUT    /pictures/:id           controllers.Pictures.update(id: String)
GET    /pictures/user/:user_id controllers.Pictures.indexForUser(user_id: String)
GET    /pictures               controllers.Pictures.index()
GET    /pictures/:id           controllers.Pictures.show(id: String)

POST   /messages               controllers.Messages.create()
PUT    /messages/:id           controllers.Messages.update(id: String)
GET    /messages               controllers.Messages.index()
GET    /messages/:id           controllers.Messages.show(id: String)

POST   /posts                  controllers.Posts.create()
PUT    /posts/:id              controllers.Posts.update(id: String)
GET    /posts                  controllers.Posts.index()
GET    /posts/user/:id         controllers.Posts.indexForUser(id: String)
GET    /posts/:id              controllers.Posts.show(id: String)

#POST   /comments/post/:post_id controllers.Comments.create(post_id: String)
#PUT    /comments/:id           controllers.Comments.update(id: String)
#GET    /comments/post/:post_id controllers.Comments.index(post_id: String)

POST   /likes/post/:post_id    controllers.Likes.create(post_id: String)
DELETE /likes/post/:post_id    controllers.Likes.destroy(post_id: String)

POST   /friends                controllers.Friends.addFriend()
GET    /friends                controllers.Friends.index()
GET    /friends/user/:user_id  controllers.Friends.indexForUser(user_id: String)
DELETE /friends/user/:user_id  controllers.Friends.removeFriend(user_id: String)

# Map static resources from the /public folder to the /assets URL path
GET     /                       controllers.Assets.at(path="/public", file="index.html")
GET     /assets/*file           controllers.Assets.at(path="/public", file)
GET     /webApp/                controllers.Assets.at(path="/public/public/webApp", file="index.html")

#\public\client\webApp

# Support for CORS requests
OPTIONS /session               controllers.Application.preflightCheck()
OPTIONS /users                 controllers.Application.preflightCheck()
OPTIONS /pictures              controllers.Application.preflightCheck()
OPTIONS /pictures/*id          controllers.Application.preflightCheckWithParam(id: String)
OPTIONS /messages              controllers.Application.preflightCheck()
OPTIONS /messages/:id          controllers.Application.preflightCheckWithParam(id: String)
OPTIONS /posts                 controllers.Application.preflightCheck()
OPTIONS /posts/:id             controllers.Application.preflightCheckWithParam(id: String)
OPTIONS /likes/post/:id        controllers.Application.preflightCheckWithParam(id: String)
OPTIONS /friends               controllers.Application.preflightCheck()
OPTIONS /friends/user/:id      controllers.Application.preflightCheckWithParam(id: String)
#OPTIONS /comments/post/:id     controllers.Application.preflightCheckWithParam(id: String)
#OPTIONS /comments/:id          controllers.Application.preflightCheckWithParam(id: String)

